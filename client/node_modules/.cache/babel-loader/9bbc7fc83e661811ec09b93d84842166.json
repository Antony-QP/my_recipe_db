{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/antonyparker/Desktop/my_recipe_db/client/src/components/recipes/Recipe_Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { history } from 'react-router-dom';\nimport RecipeContext from \"../../context/recipe/recipeContext\";\nimport AuthContext from \"../../context/auth/auth_Context\";\nimport RecipeItem from \"./Recipe_Item\";\nimport immer, { produce } from \"immer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useHistory } from \"react-router-dom\";\nimport shortid, { generate } from \"shortid\";\nexport const Recipe_Form = () => {\n  _s();\n\n  const history = useHistory(); // const goToHomePage = () => {\n  //   let path = \"/\";\n  //   history.push(path);\n  // };\n\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    authContext.loadUser(); // eslint-disable-next-line\n  }, []);\n  const recipeContext = useContext(RecipeContext);\n  const {\n    addRecipe,\n    current,\n    clearCurrent,\n    updateRecipe\n  } = recipeContext;\n  useEffect(() => {\n    if (current !== null) {\n      setRecipe(current);\n    } else {\n      setRecipe({\n        title: \"\",\n        img: \"\",\n        ingredients: [],\n        method: \"\",\n        serves: \"\",\n        time: \"\"\n      });\n    }\n  }, [recipeContext, current]);\n  const [recipe, setRecipe] = useState({\n    title: \"\",\n    img: \"\",\n    ingredients: [],\n    method: \"\",\n    serves: \"\",\n    time: \"\"\n  });\n  const [fileInputState, setFileInputState] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\"); // Image upload\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!previewSource) return;\n    uploadImage(previewSource);\n  };\n\n  const uploadImage = base64EncodedImage => {\n    try {\n      fetch(\"http://localhost:4000/api/upload\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        } // mode: 'no-cors'\n\n      }).then(res => res.json()).then(data => {\n        return data.url;\n      }).then(url => {\n        setRecipe({ ...recipe,\n          img: url\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChange = e => setRecipe({ ...recipe,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addRecipe(recipe);\n    } else {\n      updateRecipe(recipe);\n    }\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n    history.goBack();\n  };\n\n  const {\n    title,\n    img,\n    ingredients,\n    method,\n    serves,\n    time\n  } = recipe;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"ingred-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center-align\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: current ? \"Edit Recipe\" : \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), !current && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitFile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field col s12 center-align text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"img\",\n            className: \"center\",\n            type: \"file\",\n            name: \"img\",\n            onChange: handleFileInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewSource,\n          style: {\n            width: \"300px\",\n            height: \"300px\",\n            borderRadius: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), previewSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field col s12 center-align\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn waves-effect waves-light secondary\",\n            type: \"submit\",\n            name: \"action\",\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"col s12\",\n        id: \"ingredForm\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field col s12 center-align\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Please enter recipe title\",\n            className: \"validate\",\n            name: \"title\",\n            value: title,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), ingredients.map(i => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12 center-align\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                const name = e.target.value;\n                setRecipe({ ...recipe,\n                  ingredients: recipe.ingredients.map(x => x.id === i.id ? { ...x,\n                    name\n                  } : x)\n                });\n              },\n              value: i.name,\n              placeholder: \"ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => {\n                const amount = e.target.value;\n                setRecipe({ ...recipe,\n                  ingredients: recipe.ingredients.map(x => x.id === i.id ? { ...x,\n                    amount\n                  } : x)\n                });\n              },\n              value: i.amount,\n              placeholder: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn waves-effect waves-light primary text-1\",\n              onClick: () => {\n                setRecipe({\n                  ingredients: ingredients.filter(x => x.id !== i.id)\n                });\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, i.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => {\n            setRecipe({ ...recipe,\n              ingredients: [...ingredients, {\n                id: generate(),\n                name: \"\",\n                amount: \"\"\n              }]\n            });\n          },\n          className: \"btn waves-effect waves-light secondary\",\n          children: \"Add Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field col s12 center-align text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Please enter method\",\n            className: \"validate\",\n            name: \"method\",\n            value: method,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field col s12 center-align\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Number of servings\",\n            className: \"validate\",\n            name: \"serves\",\n            value: serves,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field col s12 center-align\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Time to compelete...\",\n            className: \"validate\",\n            name: \"time\",\n            value: time,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn waves-effect waves-light secondary\",\n          type: \"submit\",\n          name: \"action\",\n          children: current ? \"Update Recipe\" : \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), current && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn waves-effect waves light grey lighten-1\",\n            onClick: clearAll,\n            style: {\n              marginTop: \"5px\"\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recipe_Form, \"83eYqqKZUkgmb986Bzr26cpIdZY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Recipe_Form;\nexport default Recipe_Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe_Form\");","map":{"version":3,"sources":["/Users/antonyparker/Desktop/my_recipe_db/client/src/components/recipes/Recipe_Form.js"],"names":["React","useState","useContext","useEffect","history","RecipeContext","AuthContext","RecipeItem","immer","produce","v4","uuidv4","useHistory","shortid","generate","Recipe_Form","authContext","loadUser","recipeContext","addRecipe","current","clearCurrent","updateRecipe","setRecipe","title","img","ingredients","method","serves","time","recipe","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","handleFileInputChange","e","file","target","files","previewFile","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","base64EncodedImage","fetch","body","JSON","stringify","data","headers","then","res","json","url","error","console","log","onChange","name","value","onSubmit","clearAll","goBack","width","height","borderRadius","map","i","x","id","amount","filter","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { history } from 'react-router-dom'\nimport RecipeContext from \"../../context/recipe/recipeContext\";\nimport AuthContext from \"../../context/auth/auth_Context\";\nimport RecipeItem from \"./Recipe_Item\";\nimport immer, { produce } from \"immer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useHistory } from \"react-router-dom\";\nimport shortid, { generate } from \"shortid\";\n\nexport const Recipe_Form = () => {\n  const history = useHistory();\n\n  // const goToHomePage = () => {\n  //   let path = \"/\";\n  //   history.push(path);\n  // };\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n    // eslint-disable-next-line\n  }, []);\n\n  const recipeContext = useContext(RecipeContext);\n\n  const { addRecipe, current, clearCurrent, updateRecipe } = recipeContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setRecipe(current);\n    } else {\n      setRecipe({\n        title: \"\",\n        img: \"\",\n        ingredients: [],\n        method: \"\",\n        serves: \"\",\n        time: \"\",\n      });\n    }\n  }, [recipeContext, current]);\n\n  const [recipe, setRecipe] = useState({\n    title: \"\",\n    img: \"\",\n    ingredients: [],\n    method: \"\",\n    serves: \"\",\n    time: \"\",\n  });\n\n  const [fileInputState, setFileInputState] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  // Image upload\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = (e) => {\n    e.preventDefault();\n    if (!previewSource) return;\n    uploadImage(previewSource);\n  };\n\n  const uploadImage = (base64EncodedImage) => {\n    try {\n      fetch(\"http://localhost:4000/api/upload\", {\n        method: \"POST\",\n        body: JSON.stringify({ data: base64EncodedImage }),\n        headers: { \"Content-type\": \"application/json\" },\n        // mode: 'no-cors'\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          return data.url;\n        })\n        .then((url) => {\n          setRecipe({\n            ...recipe,\n            img: url,\n          });\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onChange = (e) =>\n    setRecipe({ ...recipe, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (current === null) {\n      addRecipe(recipe);\n    } else {\n      updateRecipe(recipe);\n    }\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n    history.goBack();\n  };\n\n  const { title, img, ingredients, method, serves, time } = recipe;\n\n  return (\n    <div id='ingred-container'>\n      <div className='row center-align'>\n        <h3>{current ? \"Edit Recipe\" : \"Add Recipe\"}</h3>\n        {!current && (\n          <form onSubmit={handleSubmitFile}>\n            {/* Image */}\n\n            <div className='input-field col s12 center-align text-center'>\n              <input\n                id='img'\n                className='center'\n                type='file'\n                name='img'\n                onChange={handleFileInputChange}></input>\n            </div>\n            {previewSource && (\n              <img\n                src={previewSource}\n                style={{\n                  width: \"300px\",\n                  height: \"300px\",\n                  borderRadius: \"5px\",\n                }}></img>\n            )}\n            {previewSource && (\n              <div className='input-field col s12 center-align'>\n                <button\n                  className='btn waves-effect waves-light secondary'\n                  type='submit'\n                  name='action'>\n                  Upload Image\n                </button>\n              </div>\n            )}\n          </form>\n        )}\n        {/* Title */}\n        <form className='col s12' id='ingredForm' onSubmit={onSubmit}>\n          <div className='input-field col s12 center-align'>\n            <input\n              type='text'\n              placeholder='Please enter recipe title'\n              className='validate'\n              name='title'\n              value={title}\n              onChange={onChange}\n            />\n          </div>\n          {ingredients.map((i) => {\n            return (\n              <div key={i.id} className='input-field col s12 center-align'>\n                <input\n                  onChange={(e) => {\n                    const name = e.target.value;\n                    setRecipe({\n                      ...recipe,\n                      ingredients: recipe.ingredients.map((x) =>\n                        x.id === i.id\n                          ? {\n                              ...x,\n                              name,\n                            }\n                          : x\n                      ),\n                    });\n                  }}\n                  value={i.name}\n                  placeholder='ingredient'\n                />\n                <input\n                  onChange={(e) => {\n                    const amount = e.target.value;\n                    setRecipe({\n                      ...recipe,\n                      ingredients: recipe.ingredients.map((x) =>\n                        x.id === i.id\n                          ? {\n                              ...x,\n                              amount,\n                            }\n                          : x\n                      ),\n                    });\n                  }}\n                  value={i.amount}\n                  placeholder='amount'\n                />\n                <button\n                  className='btn waves-effect waves-light primary text-1'\n                  onClick={() => {\n                    setRecipe({\n                      ingredients: ingredients.filter((x) => x.id !== i.id),\n                    });\n                  }}>\n                  X\n                </button>\n              </div>\n            );\n          })}\n          <a\n            onClick={() => {\n              setRecipe({\n                ...recipe,\n                ingredients: [\n                  ...ingredients,\n                  {\n                    id: generate(),\n                    name: \"\",\n                    amount: \"\",\n                  },\n                ],\n              });\n            }}\n            className='btn waves-effect waves-light secondary'>\n            Add Ingredient\n          </a>\n          {/* Method */}\n              <div className='input-field col s12 center-align text-center'>\n                <input\n                  type='text'\n                  placeholder='Please enter method'\n                  className='validate'\n                  name='method'\n                  value={method}\n                  onChange={onChange}\n                />\n              </div>\n          {/* Serves */}\n          <div className='input-field col s12 center-align'>\n            <input\n              type='number'\n              placeholder='Number of servings'\n              className='validate'\n              name='serves'\n              value={serves}\n              onChange={onChange}\n            />\n          </div>\n          {/* Time */}\n          <div className='input-field col s12 center-align'>\n            <input\n              type='text'\n              placeholder='Time to compelete...'\n              className='validate'\n              name='time'\n              value={time}\n              onChange={onChange}\n            />\n          </div>\n          <br></br>\n          <button\n            className='btn waves-effect waves-light secondary'\n            type='submit'\n            name='action'>\n            {current ? \"Update Recipe\" : \"Add Recipe\"}\n          </button>\n          {current && (\n            <div>\n              <button className=\"btn waves-effect waves light grey lighten-1\"onClick={clearAll} style={{ marginTop : \"5px\"}}>Clear</button>\n            </div>\n          )}\n        </form>\n        {/* {JSON.stringify(ingredients, null, 2)}\n        {JSON.stringify(img)} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe_Form;\n"]},"metadata":{},"sourceType":"module"}