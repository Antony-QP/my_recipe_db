{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/antonyparker/Desktop/my_recipe_db/client/src/components/recipes/Recipe_Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Slider from \"react-slick\";\nimport RecipeContext from \"../../context/recipe/recipeContext\";\nimport RecipeItem from \"../recipes/Recipe_Item\";\nimport Spinner from \"../layout/Spinner\";\nexport default function RecipeSlider() {\n  _s();\n\n  const recipeContext = useContext(RecipeContext);\n  const {\n    recipes,\n    filtered,\n    getRecipes,\n    loading,\n    current\n  } = recipeContext;\n  useEffect(() => {\n    getRecipes(); // eslint-disable-next-line\n  }, []);\n\n  if (recipes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add a recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    draggable: true\n  };\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: filtered !== null ? filtered.map(recipe => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"my-node\",\n        children: /*#__PURE__*/_jsxDEV(RecipeItem, {\n          recipe: recipe\n        }, recipe._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)) : recipes.map(recipe => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"my-node\",\n        children: /*#__PURE__*/_jsxDEV(RecipeItem, {\n          recipe: recipe\n        }, recipe._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeSlider, \"p2KAWRCtLpN0CgJuKNd+Zwhg2a8=\");\n\n_c = RecipeSlider;\n{\n  /* Ingredients */\n}\n{\n  /* <div className='ingredientContainer'>\n          <div className='row ingredient-line'>\n            <div className='input-field col s6 center-align'>\n              <input\n                type='text'\n                placeholder='Please enter ingredients'\n                className='validate'\n                name='ingredient'\n                value={ingredients.ingredient}\n                onChange={onChange}\n              />\n            </div>\n            <div className='input-field col s6 center-align'>\n              <input\n                type='number'\n                placeholder='Please enter ingredients'\n                className='validate'\n                name='amount'\n                value={ingredients.amount}\n                onChange={onChange}\n              />\n              <label htmlFor='amount'>Amount</label>\n            </div>\n          </div>\n        </div>\n        <a class='btn-floating btn-large waves-effect waves-light red'>\n          <i className='fas fa-plus'></i>\n        </a> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeSlider\");","map":{"version":3,"sources":["/Users/antonyparker/Desktop/my_recipe_db/client/src/components/recipes/Recipe_Slider.js"],"names":["React","useContext","useEffect","CSSTransition","TransitionGroup","Slider","RecipeContext","RecipeItem","Spinner","RecipeSlider","recipeContext","recipes","filtered","getRecipes","loading","current","length","settings","dots","infinite","speed","slidesToShow","slidesToScroll","draggable","map","recipe","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,aAAa,GAAGT,UAAU,CAACK,aAAD,CAAhC;AAEA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,OAAjC;AAA0CC,IAAAA;AAA1C,MAAsDL,aAA5D;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,OAAO,CAACK,MAAR,KAAmB,CAAvB,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,SAAS,EAAE;AANE,GAAf;AAQA,sBACE,QAAC,eAAD;AAAA,2BACE,QAAC,MAAD,OAAYN,QAAZ;AAAA,gBACGL,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACY,GAAT,CAAcC,MAAD,iBACX,QAAC,aAAD;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,SAHb;AAAA,+BAIE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAEA;AAApB,WAAiCA,MAAM,CAACC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAJF,SACOD,MAAM,CAACC,GADd;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GASGf,OAAO,CAACa,GAAR,CAAaC,MAAD,iBACV,QAAC,aAAD;AAEE,QAAA,OAAO,EAAE,GAFX;AAGE,QAAA,UAAU,EAAC,SAHb;AAAA,+BAIE,QAAC,UAAD;AAA6B,UAAA,MAAM,EAAEA;AAArC,WAAiBA,MAAM,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAJF,SACOD,MAAM,CAACC,GADd;AAAA;AAAA;AAAA;AAAA,cADF;AAVN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA7CuBjB,Y;;KAAAA,Y;AA+CxB;AACE;AACD;AACD;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Slider from \"react-slick\";\nimport RecipeContext from \"../../context/recipe/recipeContext\";\nimport RecipeItem from \"../recipes/Recipe_Item\";\nimport Spinner from \"../layout/Spinner\";\n\nexport default function RecipeSlider() {\n  const recipeContext = useContext(RecipeContext);\n\n  const { recipes, filtered, getRecipes, loading, current } = recipeContext;\n\n  useEffect(() => {\n    getRecipes();\n    // eslint-disable-next-line\n  }, []);\n\n  if (recipes.length === 0) {\n    return <h4>Please add a recipe</h4>;\n  }\n\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    draggable: true,\n  };\n  return (\n    <TransitionGroup>\n      <Slider {...settings}>\n        {filtered !== null\n          ? filtered.map((recipe) => (\n              <CSSTransition\n                key={recipe._id}\n                timeout={500}\n                classNames='my-node'>\n                <RecipeItem recipe={recipe} key={recipe._id} />\n              </CSSTransition>\n            ))\n          : recipes.map((recipe) => (\n              <CSSTransition\n                key={recipe._id}\n                timeout={500}\n                classNames='my-node'>\n                <RecipeItem key={recipe._id} recipe={recipe} />\n              </CSSTransition>\n            ))}\n      </Slider>\n    </TransitionGroup>\n  );\n}\n\n{\n  /* Ingredients */\n}\n{\n  /* <div className='ingredientContainer'>\n          <div className='row ingredient-line'>\n            <div className='input-field col s6 center-align'>\n              <input\n                type='text'\n                placeholder='Please enter ingredients'\n                className='validate'\n                name='ingredient'\n                value={ingredients.ingredient}\n                onChange={onChange}\n              />\n            </div>\n            <div className='input-field col s6 center-align'>\n              <input\n                type='number'\n                placeholder='Please enter ingredients'\n                className='validate'\n                name='amount'\n                value={ingredients.amount}\n                onChange={onChange}\n              />\n              <label htmlFor='amount'>Amount</label>\n            </div>\n          </div>\n        </div>\n        <a class='btn-floating btn-large waves-effect waves-light red'>\n          <i className='fas fa-plus'></i>\n        </a> */\n}\n"]},"metadata":{},"sourceType":"module"}