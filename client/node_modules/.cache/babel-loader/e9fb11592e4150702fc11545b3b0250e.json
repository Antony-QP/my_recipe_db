{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/antonyparker/Documents/Coding/my_recipe_db/client/src/context/auth/Auth_State.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./auth_Context\";\nimport authReducer from \"./auth_Reducer\";\nimport axios from \"axios\";\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\nimport { PaginationButton } from \"react-materialize\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  }; // Allows us to access state and dispatch to the reducer\n\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"api/users\", formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  ; // Logout\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/antonyparker/Documents/Coding/my_recipe_db/client/src/context/auth/Auth_State.js"],"names":["React","useReducer","AuthContext","authReducer","axios","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","PaginationButton","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","user","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport AuthContext from \"./auth_Context\";\nimport authReducer from \"./auth_Reducer\";\nimport axios from \"axios\";\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\nimport { PaginationButton } from \"react-materialize\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n  };\n\n  // Allows us to access state and dispatch to the reducer\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    if(localStorage.token){\n      setAuthToken(localStorage.token)\n    }\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch(err){\n      dispatch({\n        type : AUTH_ERROR, \n      })\n    }\n  };\n\n  // Register User\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"api/users\", formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser()\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Login User\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config)\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n\n      loadUser()\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };;\n\n  // Logout\n  const logout = () => dispatch({\n    type: LOGOUT\n  });\n  // Clear Errors\n  const clearErrors = () =>\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n      }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}